ARM GAS  /tmp/ccnZXw1L.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/tim.c"
  18              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_Base_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_Base_MspInit:
  26              	.LVL0:
  27              	.LFB68:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  29:Core/Src/tim.c **** TIM_HandleTypeDef htim3;
  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM1 init function */
ARM GAS  /tmp/ccnZXw1L.s 			page 2


  32:Core/Src/tim.c **** void MX_TIM1_Init(void)
  33:Core/Src/tim.c **** {
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  42:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  45:Core/Src/tim.c **** 
  46:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  47:Core/Src/tim.c ****   htim1.Instance = TIM1;
  48:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  49:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  50:Core/Src/tim.c ****   htim1.Init.Period = 65535;
  51:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  52:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  53:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  54:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  59:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  60:Core/Src/tim.c ****   {
  61:Core/Src/tim.c ****     Error_Handler();
  62:Core/Src/tim.c ****   }
  63:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  64:Core/Src/tim.c ****   {
  65:Core/Src/tim.c ****     Error_Handler();
  66:Core/Src/tim.c ****   }
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  70:Core/Src/tim.c ****   {
  71:Core/Src/tim.c ****     Error_Handler();
  72:Core/Src/tim.c ****   }
  73:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  81:Core/Src/tim.c ****   {
  82:Core/Src/tim.c ****     Error_Handler();
  83:Core/Src/tim.c ****   }
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  /tmp/ccnZXw1L.s 			page 3


  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  91:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  92:Core/Src/tim.c ****   {
  93:Core/Src/tim.c ****     Error_Handler();
  94:Core/Src/tim.c ****   }
  95:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  98:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c **** }
 101:Core/Src/tim.c **** /* TIM2 init function */
 102:Core/Src/tim.c **** void MX_TIM2_Init(void)
 103:Core/Src/tim.c **** {
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 106:Core/Src/tim.c **** 
 107:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
 108:Core/Src/tim.c **** 
 109:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 110:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 111:Core/Src/tim.c **** 
 112:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 113:Core/Src/tim.c **** 
 114:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
 115:Core/Src/tim.c ****   htim2.Instance = TIM2;
 116:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 117:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 118:Core/Src/tim.c ****   htim2.Init.Period = 65535;
 119:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 120:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 121:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 122:Core/Src/tim.c ****   {
 123:Core/Src/tim.c ****     Error_Handler();
 124:Core/Src/tim.c ****   }
 125:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 126:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 127:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 128:Core/Src/tim.c ****   {
 129:Core/Src/tim.c ****     Error_Handler();
 130:Core/Src/tim.c ****   }
 131:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 132:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 133:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 134:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 135:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 136:Core/Src/tim.c ****   {
 137:Core/Src/tim.c ****     Error_Handler();
 138:Core/Src/tim.c ****   }
 139:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 140:Core/Src/tim.c ****   {
 141:Core/Src/tim.c ****     Error_Handler();
 142:Core/Src/tim.c ****   }
 143:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 144:Core/Src/tim.c ****   {
 145:Core/Src/tim.c ****     Error_Handler();
ARM GAS  /tmp/ccnZXw1L.s 			page 4


 146:Core/Src/tim.c ****   }
 147:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 148:Core/Src/tim.c ****   {
 149:Core/Src/tim.c ****     Error_Handler();
 150:Core/Src/tim.c ****   }
 151:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 152:Core/Src/tim.c **** 
 153:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
 154:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim2);
 155:Core/Src/tim.c **** 
 156:Core/Src/tim.c **** }
 157:Core/Src/tim.c **** /* TIM3 init function */
 158:Core/Src/tim.c **** void MX_TIM3_Init(void)
 159:Core/Src/tim.c **** {
 160:Core/Src/tim.c **** 
 161:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 162:Core/Src/tim.c **** 
 163:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 0 */
 164:Core/Src/tim.c **** 
 165:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 166:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 167:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 168:Core/Src/tim.c **** 
 169:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 170:Core/Src/tim.c **** 
 171:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 1 */
 172:Core/Src/tim.c ****   htim3.Instance = TIM3;
 173:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
 174:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 175:Core/Src/tim.c ****   htim3.Init.Period = 65535;
 176:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 177:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 178:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 179:Core/Src/tim.c ****   {
 180:Core/Src/tim.c ****     Error_Handler();
 181:Core/Src/tim.c ****   }
 182:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 183:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 184:Core/Src/tim.c ****   {
 185:Core/Src/tim.c ****     Error_Handler();
 186:Core/Src/tim.c ****   }
 187:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 188:Core/Src/tim.c ****   {
 189:Core/Src/tim.c ****     Error_Handler();
 190:Core/Src/tim.c ****   }
 191:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 192:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 193:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 194:Core/Src/tim.c ****   {
 195:Core/Src/tim.c ****     Error_Handler();
 196:Core/Src/tim.c ****   }
 197:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 198:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 199:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 200:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 201:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 202:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccnZXw1L.s 			page 5


 203:Core/Src/tim.c ****     Error_Handler();
 204:Core/Src/tim.c ****   }
 205:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 206:Core/Src/tim.c ****   {
 207:Core/Src/tim.c ****     Error_Handler();
 208:Core/Src/tim.c ****   }
 209:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 210:Core/Src/tim.c ****   {
 211:Core/Src/tim.c ****     Error_Handler();
 212:Core/Src/tim.c ****   }
 213:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 214:Core/Src/tim.c ****   {
 215:Core/Src/tim.c ****     Error_Handler();
 216:Core/Src/tim.c ****   }
 217:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 218:Core/Src/tim.c **** 
 219:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 2 */
 220:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim3);
 221:Core/Src/tim.c **** 
 222:Core/Src/tim.c **** }
 223:Core/Src/tim.c **** 
 224:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 225:Core/Src/tim.c **** {
  28              		.loc 1 225 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 225 1 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 8
 226:Core/Src/tim.c **** 
 227:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  36              		.loc 1 227 3 is_stmt 1 view .LVU2
  37              		.loc 1 227 20 is_stmt 0 view .LVU3
  38 0002 0368     		ldr	r3, [r0]
  39              		.loc 1 227 5 view .LVU4
  40 0004 0E4A     		ldr	r2, .L7
  41 0006 9342     		cmp	r3, r2
  42 0008 04D0     		beq	.L5
 228:Core/Src/tim.c ****   {
 229:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 230:Core/Src/tim.c **** 
 231:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 232:Core/Src/tim.c ****     /* TIM1 clock enable */
 233:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 234:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 235:Core/Src/tim.c **** 
 236:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 237:Core/Src/tim.c ****   }
 238:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM3)
  43              		.loc 1 238 8 is_stmt 1 view .LVU5
  44              		.loc 1 238 10 is_stmt 0 view .LVU6
  45 000a 0E4A     		ldr	r2, .L7+4
  46 000c 9342     		cmp	r3, r2
  47 000e 0CD0     		beq	.L6
  48              	.L1:
ARM GAS  /tmp/ccnZXw1L.s 			page 6


 239:Core/Src/tim.c ****   {
 240:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 241:Core/Src/tim.c **** 
 242:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 0 */
 243:Core/Src/tim.c ****     /* TIM3 clock enable */
 244:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 245:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 246:Core/Src/tim.c **** 
 247:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 1 */
 248:Core/Src/tim.c ****   }
 249:Core/Src/tim.c **** }
  49              		.loc 1 249 1 view .LVU7
  50 0010 02B0     		add	sp, sp, #8
  51              		.cfi_remember_state
  52              		.cfi_def_cfa_offset 0
  53              		@ sp needed
  54 0012 7047     		bx	lr
  55              	.L5:
  56              		.cfi_restore_state
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  57              		.loc 1 233 5 is_stmt 1 view .LVU8
  58              	.LBB2:
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  59              		.loc 1 233 5 view .LVU9
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  60              		.loc 1 233 5 view .LVU10
  61 0014 0C4B     		ldr	r3, .L7+8
  62 0016 9A69     		ldr	r2, [r3, #24]
  63 0018 42F40062 		orr	r2, r2, #2048
  64 001c 9A61     		str	r2, [r3, #24]
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  65              		.loc 1 233 5 view .LVU11
  66 001e 9B69     		ldr	r3, [r3, #24]
  67 0020 03F40063 		and	r3, r3, #2048
  68 0024 0093     		str	r3, [sp]
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  69              		.loc 1 233 5 view .LVU12
  70 0026 009B     		ldr	r3, [sp]
  71              	.LBE2:
 233:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  72              		.loc 1 233 5 view .LVU13
  73 0028 F2E7     		b	.L1
  74              	.L6:
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  75              		.loc 1 244 5 view .LVU14
  76              	.LBB3:
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  77              		.loc 1 244 5 view .LVU15
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  78              		.loc 1 244 5 view .LVU16
  79 002a 074B     		ldr	r3, .L7+8
  80 002c DA69     		ldr	r2, [r3, #28]
  81 002e 42F00202 		orr	r2, r2, #2
  82 0032 DA61     		str	r2, [r3, #28]
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  83              		.loc 1 244 5 view .LVU17
  84 0034 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccnZXw1L.s 			page 7


  85 0036 03F00203 		and	r3, r3, #2
  86 003a 0193     		str	r3, [sp, #4]
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  87              		.loc 1 244 5 view .LVU18
  88 003c 019B     		ldr	r3, [sp, #4]
  89              	.LBE3:
 244:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  90              		.loc 1 244 5 discriminator 1 view .LVU19
  91              		.loc 1 249 1 is_stmt 0 view .LVU20
  92 003e E7E7     		b	.L1
  93              	.L8:
  94              		.align	2
  95              	.L7:
  96 0040 002C0140 		.word	1073818624
  97 0044 00040040 		.word	1073742848
  98 0048 00100240 		.word	1073876992
  99              		.cfi_endproc
 100              	.LFE68:
 102              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 103              		.align	1
 104              		.global	HAL_TIM_PWM_MspInit
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	HAL_TIM_PWM_MspInit:
 110              	.LVL1:
 111              	.LFB69:
 250:Core/Src/tim.c **** 
 251:Core/Src/tim.c **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 252:Core/Src/tim.c **** {
 112              		.loc 1 252 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 8
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 253:Core/Src/tim.c **** 
 254:Core/Src/tim.c ****   if(tim_pwmHandle->Instance==TIM2)
 117              		.loc 1 254 3 view .LVU22
 118              		.loc 1 254 19 is_stmt 0 view .LVU23
 119 0000 0368     		ldr	r3, [r0]
 120              		.loc 1 254 5 view .LVU24
 121 0002 B3F1804F 		cmp	r3, #1073741824
 122 0006 00D0     		beq	.L15
 123 0008 7047     		bx	lr
 124              	.L15:
 252:Core/Src/tim.c **** 
 125              		.loc 1 252 1 view .LVU25
 126 000a 82B0     		sub	sp, sp, #8
 127              		.cfi_def_cfa_offset 8
 255:Core/Src/tim.c ****   {
 256:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 257:Core/Src/tim.c **** 
 258:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 259:Core/Src/tim.c ****     /* TIM2 clock enable */
 260:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 128              		.loc 1 260 5 is_stmt 1 view .LVU26
 129              	.LBB4:
ARM GAS  /tmp/ccnZXw1L.s 			page 8


 130              		.loc 1 260 5 view .LVU27
 131              		.loc 1 260 5 view .LVU28
 132 000c 03F50433 		add	r3, r3, #135168
 133 0010 DA69     		ldr	r2, [r3, #28]
 134 0012 42F00102 		orr	r2, r2, #1
 135 0016 DA61     		str	r2, [r3, #28]
 136              		.loc 1 260 5 view .LVU29
 137 0018 DB69     		ldr	r3, [r3, #28]
 138 001a 03F00103 		and	r3, r3, #1
 139 001e 0193     		str	r3, [sp, #4]
 140              		.loc 1 260 5 view .LVU30
 141 0020 019B     		ldr	r3, [sp, #4]
 142              	.LBE4:
 143              		.loc 1 260 5 discriminator 1 view .LVU31
 261:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 262:Core/Src/tim.c **** 
 263:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 264:Core/Src/tim.c ****   }
 265:Core/Src/tim.c **** }
 144              		.loc 1 265 1 is_stmt 0 view .LVU32
 145 0022 02B0     		add	sp, sp, #8
 146              		.cfi_def_cfa_offset 0
 147              		@ sp needed
 148 0024 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE69:
 152              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 153              		.align	1
 154              		.global	HAL_TIM_MspPostInit
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	HAL_TIM_MspPostInit:
 160              	.LVL2:
 161              	.LFB70:
 266:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 267:Core/Src/tim.c **** {
 162              		.loc 1 267 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 32
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		.loc 1 267 1 is_stmt 0 view .LVU34
 167 0000 30B5     		push	{r4, r5, lr}
 168              		.cfi_def_cfa_offset 12
 169              		.cfi_offset 4, -12
 170              		.cfi_offset 5, -8
 171              		.cfi_offset 14, -4
 172 0002 89B0     		sub	sp, sp, #36
 173              		.cfi_def_cfa_offset 48
 268:Core/Src/tim.c **** 
 269:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 174              		.loc 1 269 3 is_stmt 1 view .LVU35
 175              		.loc 1 269 20 is_stmt 0 view .LVU36
 176 0004 0023     		movs	r3, #0
 177 0006 0493     		str	r3, [sp, #16]
 178 0008 0593     		str	r3, [sp, #20]
 179 000a 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccnZXw1L.s 			page 9


 180 000c 0793     		str	r3, [sp, #28]
 270:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 181              		.loc 1 270 3 is_stmt 1 view .LVU37
 182              		.loc 1 270 15 is_stmt 0 view .LVU38
 183 000e 0368     		ldr	r3, [r0]
 184              		.loc 1 270 5 view .LVU39
 185 0010 2D4A     		ldr	r2, .L24
 186 0012 9342     		cmp	r3, r2
 187 0014 07D0     		beq	.L21
 271:Core/Src/tim.c ****   {
 272:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 273:Core/Src/tim.c **** 
 274:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 275:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 276:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 277:Core/Src/tim.c ****     PA8     ------> TIM1_CH1
 278:Core/Src/tim.c ****     */
 279:Core/Src/tim.c ****     GPIO_InitStruct.Pin = CLK_Pin;
 280:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 281:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 282:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 283:Core/Src/tim.c **** 
 284:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 285:Core/Src/tim.c **** 
 286:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 287:Core/Src/tim.c ****   }
 288:Core/Src/tim.c ****   else if(timHandle->Instance==TIM2)
 188              		.loc 1 288 8 is_stmt 1 view .LVU40
 189              		.loc 1 288 10 is_stmt 0 view .LVU41
 190 0016 B3F1804F 		cmp	r3, #1073741824
 191 001a 19D0     		beq	.L22
 289:Core/Src/tim.c ****   {
 290:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 291:Core/Src/tim.c **** 
 292:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 0 */
 293:Core/Src/tim.c **** 
 294:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 295:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 296:Core/Src/tim.c ****     PA0-WKUP     ------> TIM2_CH1
 297:Core/Src/tim.c ****     PA1     ------> TIM2_CH2
 298:Core/Src/tim.c ****     PA2     ------> TIM2_CH3
 299:Core/Src/tim.c ****     PA3     ------> TIM2_CH4
 300:Core/Src/tim.c ****     */
 301:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 302:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 303:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 304:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 305:Core/Src/tim.c **** 
 306:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 307:Core/Src/tim.c **** 
 308:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 1 */
 309:Core/Src/tim.c ****   }
 310:Core/Src/tim.c ****   else if(timHandle->Instance==TIM3)
 192              		.loc 1 310 8 is_stmt 1 view .LVU42
 193              		.loc 1 310 10 is_stmt 0 view .LVU43
 194 001c 2B4A     		ldr	r2, .L24+4
 195 001e 9342     		cmp	r3, r2
ARM GAS  /tmp/ccnZXw1L.s 			page 10


 196 0020 2BD0     		beq	.L23
 197              	.LVL3:
 198              	.L16:
 311:Core/Src/tim.c ****   {
 312:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 313:Core/Src/tim.c **** 
 314:Core/Src/tim.c ****   /* USER CODE END TIM3_MspPostInit 0 */
 315:Core/Src/tim.c **** 
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 317:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 318:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 319:Core/Src/tim.c ****     PA6     ------> TIM3_CH1
 320:Core/Src/tim.c ****     PA7     ------> TIM3_CH2
 321:Core/Src/tim.c ****     PB0     ------> TIM3_CH3
 322:Core/Src/tim.c ****     PB1     ------> TIM3_CH4
 323:Core/Src/tim.c ****     */
 324:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 325:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 326:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 327:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 328:Core/Src/tim.c **** 
 329:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 330:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 331:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 332:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 333:Core/Src/tim.c **** 
 334:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 335:Core/Src/tim.c **** 
 336:Core/Src/tim.c ****   /* USER CODE END TIM3_MspPostInit 1 */
 337:Core/Src/tim.c ****   }
 338:Core/Src/tim.c **** 
 339:Core/Src/tim.c **** }
 199              		.loc 1 339 1 view .LVU44
 200 0022 09B0     		add	sp, sp, #36
 201              		.cfi_remember_state
 202              		.cfi_def_cfa_offset 12
 203              		@ sp needed
 204 0024 30BD     		pop	{r4, r5, pc}
 205              	.LVL4:
 206              	.L21:
 207              		.cfi_restore_state
 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 208              		.loc 1 275 5 is_stmt 1 view .LVU45
 209              	.LBB5:
 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 210              		.loc 1 275 5 view .LVU46
 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 211              		.loc 1 275 5 view .LVU47
 212 0026 2A4B     		ldr	r3, .L24+8
 213 0028 9A69     		ldr	r2, [r3, #24]
 214 002a 42F00402 		orr	r2, r2, #4
 215 002e 9A61     		str	r2, [r3, #24]
 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 216              		.loc 1 275 5 view .LVU48
 217 0030 9B69     		ldr	r3, [r3, #24]
 218 0032 03F00403 		and	r3, r3, #4
 219 0036 0093     		str	r3, [sp]
ARM GAS  /tmp/ccnZXw1L.s 			page 11


 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 220              		.loc 1 275 5 view .LVU49
 221 0038 009B     		ldr	r3, [sp]
 222              	.LBE5:
 275:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 223              		.loc 1 275 5 view .LVU50
 279:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 224              		.loc 1 279 5 view .LVU51
 279:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 225              		.loc 1 279 25 is_stmt 0 view .LVU52
 226 003a 4FF48073 		mov	r3, #256
 227 003e 0493     		str	r3, [sp, #16]
 280:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 228              		.loc 1 280 5 is_stmt 1 view .LVU53
 280:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 229              		.loc 1 280 26 is_stmt 0 view .LVU54
 230 0040 0223     		movs	r3, #2
 231 0042 0593     		str	r3, [sp, #20]
 281:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 232              		.loc 1 281 5 is_stmt 1 view .LVU55
 281:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 233              		.loc 1 281 27 is_stmt 0 view .LVU56
 234 0044 0793     		str	r3, [sp, #28]
 282:Core/Src/tim.c **** 
 235              		.loc 1 282 5 is_stmt 1 view .LVU57
 236 0046 04A9     		add	r1, sp, #16
 237 0048 2248     		ldr	r0, .L24+12
 238              	.LVL5:
 282:Core/Src/tim.c **** 
 239              		.loc 1 282 5 is_stmt 0 view .LVU58
 240 004a FFF7FEFF 		bl	HAL_GPIO_Init
 241              	.LVL6:
 242 004e E8E7     		b	.L16
 243              	.LVL7:
 244              	.L22:
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 245              		.loc 1 294 5 is_stmt 1 view .LVU59
 246              	.LBB6:
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 247              		.loc 1 294 5 view .LVU60
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 248              		.loc 1 294 5 view .LVU61
 249 0050 03F50433 		add	r3, r3, #135168
 250 0054 9A69     		ldr	r2, [r3, #24]
 251 0056 42F00402 		orr	r2, r2, #4
 252 005a 9A61     		str	r2, [r3, #24]
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 253              		.loc 1 294 5 view .LVU62
 254 005c 9B69     		ldr	r3, [r3, #24]
 255 005e 03F00403 		and	r3, r3, #4
 256 0062 0193     		str	r3, [sp, #4]
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 257              		.loc 1 294 5 view .LVU63
 258 0064 019B     		ldr	r3, [sp, #4]
 259              	.LBE6:
 294:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 260              		.loc 1 294 5 view .LVU64
ARM GAS  /tmp/ccnZXw1L.s 			page 12


 301:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 301 5 view .LVU65
 301:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 262              		.loc 1 301 25 is_stmt 0 view .LVU66
 263 0066 0F23     		movs	r3, #15
 264 0068 0493     		str	r3, [sp, #16]
 302:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 302 5 is_stmt 1 view .LVU67
 302:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 266              		.loc 1 302 26 is_stmt 0 view .LVU68
 267 006a 0223     		movs	r3, #2
 268 006c 0593     		str	r3, [sp, #20]
 303:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 303 5 is_stmt 1 view .LVU69
 303:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 270              		.loc 1 303 27 is_stmt 0 view .LVU70
 271 006e 0793     		str	r3, [sp, #28]
 304:Core/Src/tim.c **** 
 272              		.loc 1 304 5 is_stmt 1 view .LVU71
 273 0070 04A9     		add	r1, sp, #16
 274 0072 1848     		ldr	r0, .L24+12
 275              	.LVL8:
 304:Core/Src/tim.c **** 
 276              		.loc 1 304 5 is_stmt 0 view .LVU72
 277 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 278              	.LVL9:
 279 0078 D3E7     		b	.L16
 280              	.LVL10:
 281              	.L23:
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 282              		.loc 1 316 5 is_stmt 1 view .LVU73
 283              	.LBB7:
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 284              		.loc 1 316 5 view .LVU74
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 285              		.loc 1 316 5 view .LVU75
 286 007a 154B     		ldr	r3, .L24+8
 287 007c 9A69     		ldr	r2, [r3, #24]
 288 007e 42F00402 		orr	r2, r2, #4
 289 0082 9A61     		str	r2, [r3, #24]
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 290              		.loc 1 316 5 view .LVU76
 291 0084 9A69     		ldr	r2, [r3, #24]
 292 0086 02F00402 		and	r2, r2, #4
 293 008a 0292     		str	r2, [sp, #8]
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 294              		.loc 1 316 5 view .LVU77
 295 008c 029A     		ldr	r2, [sp, #8]
 296              	.LBE7:
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 297              		.loc 1 316 5 view .LVU78
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 298              		.loc 1 317 5 view .LVU79
 299              	.LBB8:
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 300              		.loc 1 317 5 view .LVU80
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
ARM GAS  /tmp/ccnZXw1L.s 			page 13


 301              		.loc 1 317 5 view .LVU81
 302 008e 9A69     		ldr	r2, [r3, #24]
 303 0090 42F00802 		orr	r2, r2, #8
 304 0094 9A61     		str	r2, [r3, #24]
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 305              		.loc 1 317 5 view .LVU82
 306 0096 9B69     		ldr	r3, [r3, #24]
 307 0098 03F00803 		and	r3, r3, #8
 308 009c 0393     		str	r3, [sp, #12]
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 309              		.loc 1 317 5 view .LVU83
 310 009e 039B     		ldr	r3, [sp, #12]
 311              	.LBE8:
 317:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 312              		.loc 1 317 5 view .LVU84
 324:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 313              		.loc 1 324 5 view .LVU85
 324:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 314              		.loc 1 324 25 is_stmt 0 view .LVU86
 315 00a0 C023     		movs	r3, #192
 316 00a2 0493     		str	r3, [sp, #16]
 325:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 317              		.loc 1 325 5 is_stmt 1 view .LVU87
 325:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 318              		.loc 1 325 26 is_stmt 0 view .LVU88
 319 00a4 0224     		movs	r4, #2
 320 00a6 0594     		str	r4, [sp, #20]
 326:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 321              		.loc 1 326 5 is_stmt 1 view .LVU89
 326:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 322              		.loc 1 326 27 is_stmt 0 view .LVU90
 323 00a8 0794     		str	r4, [sp, #28]
 327:Core/Src/tim.c **** 
 324              		.loc 1 327 5 is_stmt 1 view .LVU91
 325 00aa 04AD     		add	r5, sp, #16
 326 00ac 2946     		mov	r1, r5
 327 00ae 0948     		ldr	r0, .L24+12
 328              	.LVL11:
 327:Core/Src/tim.c **** 
 329              		.loc 1 327 5 is_stmt 0 view .LVU92
 330 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 331              	.LVL12:
 329:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 332              		.loc 1 329 5 is_stmt 1 view .LVU93
 329:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 333              		.loc 1 329 25 is_stmt 0 view .LVU94
 334 00b4 0323     		movs	r3, #3
 335 00b6 0493     		str	r3, [sp, #16]
 330:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 336              		.loc 1 330 5 is_stmt 1 view .LVU95
 330:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 330 26 is_stmt 0 view .LVU96
 338 00b8 0594     		str	r4, [sp, #20]
 331:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 339              		.loc 1 331 5 is_stmt 1 view .LVU97
 331:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 340              		.loc 1 331 27 is_stmt 0 view .LVU98
ARM GAS  /tmp/ccnZXw1L.s 			page 14


 341 00ba 0794     		str	r4, [sp, #28]
 332:Core/Src/tim.c **** 
 342              		.loc 1 332 5 is_stmt 1 view .LVU99
 343 00bc 2946     		mov	r1, r5
 344 00be 0648     		ldr	r0, .L24+16
 345 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 346              	.LVL13:
 347              		.loc 1 339 1 is_stmt 0 view .LVU100
 348 00c4 ADE7     		b	.L16
 349              	.L25:
 350 00c6 00BF     		.align	2
 351              	.L24:
 352 00c8 002C0140 		.word	1073818624
 353 00cc 00040040 		.word	1073742848
 354 00d0 00100240 		.word	1073876992
 355 00d4 00080140 		.word	1073809408
 356 00d8 000C0140 		.word	1073810432
 357              		.cfi_endproc
 358              	.LFE70:
 360              		.section	.text.MX_TIM1_Init,"ax",%progbits
 361              		.align	1
 362              		.global	MX_TIM1_Init
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	MX_TIM1_Init:
 368              	.LFB65:
  33:Core/Src/tim.c **** 
 369              		.loc 1 33 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 88
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 10B5     		push	{r4, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 377 0002 96B0     		sub	sp, sp, #88
 378              		.cfi_def_cfa_offset 96
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 379              		.loc 1 39 3 view .LVU102
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 380              		.loc 1 39 26 is_stmt 0 view .LVU103
 381 0004 0024     		movs	r4, #0
 382 0006 1294     		str	r4, [sp, #72]
 383 0008 1394     		str	r4, [sp, #76]
 384 000a 1494     		str	r4, [sp, #80]
 385 000c 1594     		str	r4, [sp, #84]
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 386              		.loc 1 40 3 is_stmt 1 view .LVU104
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 387              		.loc 1 40 27 is_stmt 0 view .LVU105
 388 000e 1094     		str	r4, [sp, #64]
 389 0010 1194     		str	r4, [sp, #68]
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 390              		.loc 1 41 3 is_stmt 1 view .LVU106
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 391              		.loc 1 41 22 is_stmt 0 view .LVU107
ARM GAS  /tmp/ccnZXw1L.s 			page 15


 392 0012 0994     		str	r4, [sp, #36]
 393 0014 0A94     		str	r4, [sp, #40]
 394 0016 0B94     		str	r4, [sp, #44]
 395 0018 0C94     		str	r4, [sp, #48]
 396 001a 0D94     		str	r4, [sp, #52]
 397 001c 0E94     		str	r4, [sp, #56]
 398 001e 0F94     		str	r4, [sp, #60]
  42:Core/Src/tim.c **** 
 399              		.loc 1 42 3 is_stmt 1 view .LVU108
  42:Core/Src/tim.c **** 
 400              		.loc 1 42 34 is_stmt 0 view .LVU109
 401 0020 2022     		movs	r2, #32
 402 0022 2146     		mov	r1, r4
 403 0024 01A8     		add	r0, sp, #4
 404 0026 FFF7FEFF 		bl	memset
 405              	.LVL14:
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 406              		.loc 1 47 3 is_stmt 1 view .LVU110
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 407              		.loc 1 47 18 is_stmt 0 view .LVU111
 408 002a 2C48     		ldr	r0, .L40
 409 002c 2C4B     		ldr	r3, .L40+4
 410 002e 0360     		str	r3, [r0]
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 411              		.loc 1 48 3 is_stmt 1 view .LVU112
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 412              		.loc 1 48 24 is_stmt 0 view .LVU113
 413 0030 4460     		str	r4, [r0, #4]
  49:Core/Src/tim.c ****   htim1.Init.Period = 65535;
 414              		.loc 1 49 3 is_stmt 1 view .LVU114
  49:Core/Src/tim.c ****   htim1.Init.Period = 65535;
 415              		.loc 1 49 26 is_stmt 0 view .LVU115
 416 0032 8460     		str	r4, [r0, #8]
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 417              		.loc 1 50 3 is_stmt 1 view .LVU116
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 418              		.loc 1 50 21 is_stmt 0 view .LVU117
 419 0034 4FF6FF73 		movw	r3, #65535
 420 0038 C360     		str	r3, [r0, #12]
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 421              		.loc 1 51 3 is_stmt 1 view .LVU118
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 422              		.loc 1 51 28 is_stmt 0 view .LVU119
 423 003a 0461     		str	r4, [r0, #16]
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 424              		.loc 1 52 3 is_stmt 1 view .LVU120
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 425              		.loc 1 52 32 is_stmt 0 view .LVU121
 426 003c 4461     		str	r4, [r0, #20]
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 427              		.loc 1 53 3 is_stmt 1 view .LVU122
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 428              		.loc 1 53 32 is_stmt 0 view .LVU123
 429 003e 8461     		str	r4, [r0, #24]
  54:Core/Src/tim.c ****   {
 430              		.loc 1 54 3 is_stmt 1 view .LVU124
  54:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccnZXw1L.s 			page 16


 431              		.loc 1 54 7 is_stmt 0 view .LVU125
 432 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 433              	.LVL15:
  54:Core/Src/tim.c ****   {
 434              		.loc 1 54 6 discriminator 1 view .LVU126
 435 0044 0028     		cmp	r0, #0
 436 0046 37D1     		bne	.L34
 437              	.L27:
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 438              		.loc 1 58 3 is_stmt 1 view .LVU127
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 439              		.loc 1 58 34 is_stmt 0 view .LVU128
 440 0048 4FF48053 		mov	r3, #4096
 441 004c 1293     		str	r3, [sp, #72]
  59:Core/Src/tim.c ****   {
 442              		.loc 1 59 3 is_stmt 1 view .LVU129
  59:Core/Src/tim.c ****   {
 443              		.loc 1 59 7 is_stmt 0 view .LVU130
 444 004e 12A9     		add	r1, sp, #72
 445 0050 2248     		ldr	r0, .L40
 446 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 447              	.LVL16:
  59:Core/Src/tim.c ****   {
 448              		.loc 1 59 6 discriminator 1 view .LVU131
 449 0056 0028     		cmp	r0, #0
 450 0058 31D1     		bne	.L35
 451              	.L28:
  63:Core/Src/tim.c ****   {
 452              		.loc 1 63 3 is_stmt 1 view .LVU132
  63:Core/Src/tim.c ****   {
 453              		.loc 1 63 7 is_stmt 0 view .LVU133
 454 005a 2048     		ldr	r0, .L40
 455 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 456              	.LVL17:
  63:Core/Src/tim.c ****   {
 457              		.loc 1 63 6 discriminator 1 view .LVU134
 458 0060 0028     		cmp	r0, #0
 459 0062 2FD1     		bne	.L36
 460              	.L29:
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 461              		.loc 1 67 3 is_stmt 1 view .LVU135
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 462              		.loc 1 67 37 is_stmt 0 view .LVU136
 463 0064 0023     		movs	r3, #0
 464 0066 1093     		str	r3, [sp, #64]
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 465              		.loc 1 68 3 is_stmt 1 view .LVU137
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 466              		.loc 1 68 33 is_stmt 0 view .LVU138
 467 0068 1193     		str	r3, [sp, #68]
  69:Core/Src/tim.c ****   {
 468              		.loc 1 69 3 is_stmt 1 view .LVU139
  69:Core/Src/tim.c ****   {
 469              		.loc 1 69 7 is_stmt 0 view .LVU140
 470 006a 10A9     		add	r1, sp, #64
 471 006c 1B48     		ldr	r0, .L40
 472 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/ccnZXw1L.s 			page 17


 473              	.LVL18:
  69:Core/Src/tim.c ****   {
 474              		.loc 1 69 6 discriminator 1 view .LVU141
 475 0072 50BB     		cbnz	r0, .L37
 476              	.L30:
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 477              		.loc 1 73 3 is_stmt 1 view .LVU142
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 478              		.loc 1 73 20 is_stmt 0 view .LVU143
 479 0074 6023     		movs	r3, #96
 480 0076 0993     		str	r3, [sp, #36]
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 481              		.loc 1 74 3 is_stmt 1 view .LVU144
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 482              		.loc 1 74 19 is_stmt 0 view .LVU145
 483 0078 0022     		movs	r2, #0
 484 007a 0A92     		str	r2, [sp, #40]
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 485              		.loc 1 75 3 is_stmt 1 view .LVU146
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 486              		.loc 1 75 24 is_stmt 0 view .LVU147
 487 007c 0B92     		str	r2, [sp, #44]
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 488              		.loc 1 76 3 is_stmt 1 view .LVU148
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 489              		.loc 1 76 25 is_stmt 0 view .LVU149
 490 007e 0C92     		str	r2, [sp, #48]
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 491              		.loc 1 77 3 is_stmt 1 view .LVU150
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 492              		.loc 1 77 24 is_stmt 0 view .LVU151
 493 0080 0D92     		str	r2, [sp, #52]
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 494              		.loc 1 78 3 is_stmt 1 view .LVU152
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 495              		.loc 1 78 25 is_stmt 0 view .LVU153
 496 0082 0E92     		str	r2, [sp, #56]
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 497              		.loc 1 79 3 is_stmt 1 view .LVU154
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 498              		.loc 1 79 26 is_stmt 0 view .LVU155
 499 0084 0F92     		str	r2, [sp, #60]
  80:Core/Src/tim.c ****   {
 500              		.loc 1 80 3 is_stmt 1 view .LVU156
  80:Core/Src/tim.c ****   {
 501              		.loc 1 80 7 is_stmt 0 view .LVU157
 502 0086 09A9     		add	r1, sp, #36
 503 0088 1448     		ldr	r0, .L40
 504 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 505              	.LVL19:
  80:Core/Src/tim.c ****   {
 506              		.loc 1 80 6 discriminator 1 view .LVU158
 507 008e F8B9     		cbnz	r0, .L38
 508              	.L31:
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 509              		.loc 1 84 3 is_stmt 1 view .LVU159
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
ARM GAS  /tmp/ccnZXw1L.s 			page 18


 510              		.loc 1 84 40 is_stmt 0 view .LVU160
 511 0090 0023     		movs	r3, #0
 512 0092 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 513              		.loc 1 85 3 is_stmt 1 view .LVU161
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 514              		.loc 1 85 41 is_stmt 0 view .LVU162
 515 0094 0293     		str	r3, [sp, #8]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 516              		.loc 1 86 3 is_stmt 1 view .LVU163
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 517              		.loc 1 86 34 is_stmt 0 view .LVU164
 518 0096 0393     		str	r3, [sp, #12]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 519              		.loc 1 87 3 is_stmt 1 view .LVU165
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 520              		.loc 1 87 33 is_stmt 0 view .LVU166
 521 0098 0493     		str	r3, [sp, #16]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 522              		.loc 1 88 3 is_stmt 1 view .LVU167
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 523              		.loc 1 88 35 is_stmt 0 view .LVU168
 524 009a 0593     		str	r3, [sp, #20]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 525              		.loc 1 89 3 is_stmt 1 view .LVU169
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 526              		.loc 1 89 38 is_stmt 0 view .LVU170
 527 009c 4FF40052 		mov	r2, #8192
 528 00a0 0692     		str	r2, [sp, #24]
  90:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 529              		.loc 1 90 3 is_stmt 1 view .LVU171
  90:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 530              		.loc 1 90 40 is_stmt 0 view .LVU172
 531 00a2 0893     		str	r3, [sp, #32]
  91:Core/Src/tim.c ****   {
 532              		.loc 1 91 3 is_stmt 1 view .LVU173
  91:Core/Src/tim.c ****   {
 533              		.loc 1 91 7 is_stmt 0 view .LVU174
 534 00a4 01A9     		add	r1, sp, #4
 535 00a6 0D48     		ldr	r0, .L40
 536 00a8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 537              	.LVL20:
  91:Core/Src/tim.c ****   {
 538              		.loc 1 91 6 discriminator 1 view .LVU175
 539 00ac 98B9     		cbnz	r0, .L39
 540              	.L32:
  98:Core/Src/tim.c **** 
 541              		.loc 1 98 3 is_stmt 1 view .LVU176
 542 00ae 0B48     		ldr	r0, .L40
 543 00b0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 544              	.LVL21:
 100:Core/Src/tim.c **** /* TIM2 init function */
 545              		.loc 1 100 1 is_stmt 0 view .LVU177
 546 00b4 16B0     		add	sp, sp, #88
 547              		.cfi_remember_state
 548              		.cfi_def_cfa_offset 8
 549              		@ sp needed
ARM GAS  /tmp/ccnZXw1L.s 			page 19


 550 00b6 10BD     		pop	{r4, pc}
 551              	.L34:
 552              		.cfi_restore_state
  56:Core/Src/tim.c ****   }
 553              		.loc 1 56 5 is_stmt 1 view .LVU178
 554 00b8 FFF7FEFF 		bl	Error_Handler
 555              	.LVL22:
 556 00bc C4E7     		b	.L27
 557              	.L35:
  61:Core/Src/tim.c ****   }
 558              		.loc 1 61 5 view .LVU179
 559 00be FFF7FEFF 		bl	Error_Handler
 560              	.LVL23:
 561 00c2 CAE7     		b	.L28
 562              	.L36:
  65:Core/Src/tim.c ****   }
 563              		.loc 1 65 5 view .LVU180
 564 00c4 FFF7FEFF 		bl	Error_Handler
 565              	.LVL24:
 566 00c8 CCE7     		b	.L29
 567              	.L37:
  71:Core/Src/tim.c ****   }
 568              		.loc 1 71 5 view .LVU181
 569 00ca FFF7FEFF 		bl	Error_Handler
 570              	.LVL25:
 571 00ce D1E7     		b	.L30
 572              	.L38:
  82:Core/Src/tim.c ****   }
 573              		.loc 1 82 5 view .LVU182
 574 00d0 FFF7FEFF 		bl	Error_Handler
 575              	.LVL26:
 576 00d4 DCE7     		b	.L31
 577              	.L39:
  93:Core/Src/tim.c ****   }
 578              		.loc 1 93 5 view .LVU183
 579 00d6 FFF7FEFF 		bl	Error_Handler
 580              	.LVL27:
 581 00da E8E7     		b	.L32
 582              	.L41:
 583              		.align	2
 584              	.L40:
 585 00dc 00000000 		.word	htim1
 586 00e0 002C0140 		.word	1073818624
 587              		.cfi_endproc
 588              	.LFE65:
 590              		.section	.text.MX_TIM2_Init,"ax",%progbits
 591              		.align	1
 592              		.global	MX_TIM2_Init
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 597              	MX_TIM2_Init:
 598              	.LFB66:
 103:Core/Src/tim.c **** 
 599              		.loc 1 103 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccnZXw1L.s 			page 20


 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603 0000 00B5     		push	{lr}
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 14, -4
 606 0002 8BB0     		sub	sp, sp, #44
 607              		.cfi_def_cfa_offset 48
 109:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 608              		.loc 1 109 3 view .LVU185
 109:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 609              		.loc 1 109 27 is_stmt 0 view .LVU186
 610 0004 0023     		movs	r3, #0
 611 0006 0893     		str	r3, [sp, #32]
 612 0008 0993     		str	r3, [sp, #36]
 110:Core/Src/tim.c **** 
 613              		.loc 1 110 3 is_stmt 1 view .LVU187
 110:Core/Src/tim.c **** 
 614              		.loc 1 110 22 is_stmt 0 view .LVU188
 615 000a 0193     		str	r3, [sp, #4]
 616 000c 0293     		str	r3, [sp, #8]
 617 000e 0393     		str	r3, [sp, #12]
 618 0010 0493     		str	r3, [sp, #16]
 619 0012 0593     		str	r3, [sp, #20]
 620 0014 0693     		str	r3, [sp, #24]
 621 0016 0793     		str	r3, [sp, #28]
 115:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 622              		.loc 1 115 3 is_stmt 1 view .LVU189
 115:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 623              		.loc 1 115 18 is_stmt 0 view .LVU190
 624 0018 2548     		ldr	r0, .L56
 625 001a 4FF08042 		mov	r2, #1073741824
 626 001e 0260     		str	r2, [r0]
 116:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 627              		.loc 1 116 3 is_stmt 1 view .LVU191
 116:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 628              		.loc 1 116 24 is_stmt 0 view .LVU192
 629 0020 4360     		str	r3, [r0, #4]
 117:Core/Src/tim.c ****   htim2.Init.Period = 65535;
 630              		.loc 1 117 3 is_stmt 1 view .LVU193
 117:Core/Src/tim.c ****   htim2.Init.Period = 65535;
 631              		.loc 1 117 26 is_stmt 0 view .LVU194
 632 0022 8360     		str	r3, [r0, #8]
 118:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 633              		.loc 1 118 3 is_stmt 1 view .LVU195
 118:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 634              		.loc 1 118 21 is_stmt 0 view .LVU196
 635 0024 4FF6FF72 		movw	r2, #65535
 636 0028 C260     		str	r2, [r0, #12]
 119:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 637              		.loc 1 119 3 is_stmt 1 view .LVU197
 119:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 638              		.loc 1 119 28 is_stmt 0 view .LVU198
 639 002a 0361     		str	r3, [r0, #16]
 120:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 640              		.loc 1 120 3 is_stmt 1 view .LVU199
 120:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 641              		.loc 1 120 32 is_stmt 0 view .LVU200
 642 002c 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccnZXw1L.s 			page 21


 121:Core/Src/tim.c ****   {
 643              		.loc 1 121 3 is_stmt 1 view .LVU201
 121:Core/Src/tim.c ****   {
 644              		.loc 1 121 7 is_stmt 0 view .LVU202
 645 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 646              	.LVL28:
 121:Core/Src/tim.c ****   {
 647              		.loc 1 121 6 discriminator 1 view .LVU203
 648 0032 58BB     		cbnz	r0, .L50
 649              	.L43:
 125:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 650              		.loc 1 125 3 is_stmt 1 view .LVU204
 125:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 651              		.loc 1 125 37 is_stmt 0 view .LVU205
 652 0034 0023     		movs	r3, #0
 653 0036 0893     		str	r3, [sp, #32]
 126:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 654              		.loc 1 126 3 is_stmt 1 view .LVU206
 126:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 655              		.loc 1 126 33 is_stmt 0 view .LVU207
 656 0038 0993     		str	r3, [sp, #36]
 127:Core/Src/tim.c ****   {
 657              		.loc 1 127 3 is_stmt 1 view .LVU208
 127:Core/Src/tim.c ****   {
 658              		.loc 1 127 7 is_stmt 0 view .LVU209
 659 003a 08A9     		add	r1, sp, #32
 660 003c 1C48     		ldr	r0, .L56
 661 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 662              	.LVL29:
 127:Core/Src/tim.c ****   {
 663              		.loc 1 127 6 discriminator 1 view .LVU210
 664 0042 30BB     		cbnz	r0, .L51
 665              	.L44:
 131:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 666              		.loc 1 131 3 is_stmt 1 view .LVU211
 131:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 667              		.loc 1 131 20 is_stmt 0 view .LVU212
 668 0044 6023     		movs	r3, #96
 669 0046 0193     		str	r3, [sp, #4]
 132:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 670              		.loc 1 132 3 is_stmt 1 view .LVU213
 132:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 671              		.loc 1 132 19 is_stmt 0 view .LVU214
 672 0048 0022     		movs	r2, #0
 673 004a 0292     		str	r2, [sp, #8]
 133:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 674              		.loc 1 133 3 is_stmt 1 view .LVU215
 133:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 675              		.loc 1 133 24 is_stmt 0 view .LVU216
 676 004c 0392     		str	r2, [sp, #12]
 134:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 677              		.loc 1 134 3 is_stmt 1 view .LVU217
 134:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 678              		.loc 1 134 24 is_stmt 0 view .LVU218
 679 004e 0592     		str	r2, [sp, #20]
 135:Core/Src/tim.c ****   {
 680              		.loc 1 135 3 is_stmt 1 view .LVU219
ARM GAS  /tmp/ccnZXw1L.s 			page 22


 135:Core/Src/tim.c ****   {
 681              		.loc 1 135 7 is_stmt 0 view .LVU220
 682 0050 01A9     		add	r1, sp, #4
 683 0052 1748     		ldr	r0, .L56
 684 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 685              	.LVL30:
 135:Core/Src/tim.c ****   {
 686              		.loc 1 135 6 discriminator 1 view .LVU221
 687 0058 F0B9     		cbnz	r0, .L52
 688              	.L45:
 139:Core/Src/tim.c ****   {
 689              		.loc 1 139 3 is_stmt 1 view .LVU222
 139:Core/Src/tim.c ****   {
 690              		.loc 1 139 7 is_stmt 0 view .LVU223
 691 005a 0422     		movs	r2, #4
 692 005c 0DEB0201 		add	r1, sp, r2
 693 0060 1348     		ldr	r0, .L56
 694 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 695              	.LVL31:
 139:Core/Src/tim.c ****   {
 696              		.loc 1 139 6 discriminator 1 view .LVU224
 697 0066 D0B9     		cbnz	r0, .L53
 698              	.L46:
 143:Core/Src/tim.c ****   {
 699              		.loc 1 143 3 is_stmt 1 view .LVU225
 143:Core/Src/tim.c ****   {
 700              		.loc 1 143 7 is_stmt 0 view .LVU226
 701 0068 0822     		movs	r2, #8
 702 006a 01A9     		add	r1, sp, #4
 703 006c 1048     		ldr	r0, .L56
 704 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 705              	.LVL32:
 143:Core/Src/tim.c ****   {
 706              		.loc 1 143 6 discriminator 1 view .LVU227
 707 0072 B8B9     		cbnz	r0, .L54
 708              	.L47:
 147:Core/Src/tim.c ****   {
 709              		.loc 1 147 3 is_stmt 1 view .LVU228
 147:Core/Src/tim.c ****   {
 710              		.loc 1 147 7 is_stmt 0 view .LVU229
 711 0074 0C22     		movs	r2, #12
 712 0076 01A9     		add	r1, sp, #4
 713 0078 0D48     		ldr	r0, .L56
 714 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 715              	.LVL33:
 147:Core/Src/tim.c ****   {
 716              		.loc 1 147 6 discriminator 1 view .LVU230
 717 007e A0B9     		cbnz	r0, .L55
 718              	.L48:
 154:Core/Src/tim.c **** 
 719              		.loc 1 154 3 is_stmt 1 view .LVU231
 720 0080 0B48     		ldr	r0, .L56
 721 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 722              	.LVL34:
 156:Core/Src/tim.c **** /* TIM3 init function */
 723              		.loc 1 156 1 is_stmt 0 view .LVU232
 724 0086 0BB0     		add	sp, sp, #44
ARM GAS  /tmp/ccnZXw1L.s 			page 23


 725              		.cfi_remember_state
 726              		.cfi_def_cfa_offset 4
 727              		@ sp needed
 728 0088 5DF804FB 		ldr	pc, [sp], #4
 729              	.L50:
 730              		.cfi_restore_state
 123:Core/Src/tim.c ****   }
 731              		.loc 1 123 5 is_stmt 1 view .LVU233
 732 008c FFF7FEFF 		bl	Error_Handler
 733              	.LVL35:
 734 0090 D0E7     		b	.L43
 735              	.L51:
 129:Core/Src/tim.c ****   }
 736              		.loc 1 129 5 view .LVU234
 737 0092 FFF7FEFF 		bl	Error_Handler
 738              	.LVL36:
 739 0096 D5E7     		b	.L44
 740              	.L52:
 137:Core/Src/tim.c ****   }
 741              		.loc 1 137 5 view .LVU235
 742 0098 FFF7FEFF 		bl	Error_Handler
 743              	.LVL37:
 744 009c DDE7     		b	.L45
 745              	.L53:
 141:Core/Src/tim.c ****   }
 746              		.loc 1 141 5 view .LVU236
 747 009e FFF7FEFF 		bl	Error_Handler
 748              	.LVL38:
 749 00a2 E1E7     		b	.L46
 750              	.L54:
 145:Core/Src/tim.c ****   }
 751              		.loc 1 145 5 view .LVU237
 752 00a4 FFF7FEFF 		bl	Error_Handler
 753              	.LVL39:
 754 00a8 E4E7     		b	.L47
 755              	.L55:
 149:Core/Src/tim.c ****   }
 756              		.loc 1 149 5 view .LVU238
 757 00aa FFF7FEFF 		bl	Error_Handler
 758              	.LVL40:
 759 00ae E7E7     		b	.L48
 760              	.L57:
 761              		.align	2
 762              	.L56:
 763 00b0 00000000 		.word	htim2
 764              		.cfi_endproc
 765              	.LFE66:
 767              		.section	.text.MX_TIM3_Init,"ax",%progbits
 768              		.align	1
 769              		.global	MX_TIM3_Init
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	MX_TIM3_Init:
 775              	.LFB67:
 159:Core/Src/tim.c **** 
 776              		.loc 1 159 1 view -0
ARM GAS  /tmp/ccnZXw1L.s 			page 24


 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 56
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 00B5     		push	{lr}
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 14, -4
 783 0002 8FB0     		sub	sp, sp, #60
 784              		.cfi_def_cfa_offset 64
 165:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 785              		.loc 1 165 3 view .LVU240
 165:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 786              		.loc 1 165 26 is_stmt 0 view .LVU241
 787 0004 0023     		movs	r3, #0
 788 0006 0A93     		str	r3, [sp, #40]
 789 0008 0B93     		str	r3, [sp, #44]
 790 000a 0C93     		str	r3, [sp, #48]
 791 000c 0D93     		str	r3, [sp, #52]
 166:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 792              		.loc 1 166 3 is_stmt 1 view .LVU242
 166:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 793              		.loc 1 166 27 is_stmt 0 view .LVU243
 794 000e 0893     		str	r3, [sp, #32]
 795 0010 0993     		str	r3, [sp, #36]
 167:Core/Src/tim.c **** 
 796              		.loc 1 167 3 is_stmt 1 view .LVU244
 167:Core/Src/tim.c **** 
 797              		.loc 1 167 22 is_stmt 0 view .LVU245
 798 0012 0193     		str	r3, [sp, #4]
 799 0014 0293     		str	r3, [sp, #8]
 800 0016 0393     		str	r3, [sp, #12]
 801 0018 0493     		str	r3, [sp, #16]
 802 001a 0593     		str	r3, [sp, #20]
 803 001c 0693     		str	r3, [sp, #24]
 804 001e 0793     		str	r3, [sp, #28]
 172:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
 805              		.loc 1 172 3 is_stmt 1 view .LVU246
 172:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
 806              		.loc 1 172 18 is_stmt 0 view .LVU247
 807 0020 2F48     		ldr	r0, .L76
 808 0022 304A     		ldr	r2, .L76+4
 809 0024 0260     		str	r2, [r0]
 173:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 810              		.loc 1 173 3 is_stmt 1 view .LVU248
 173:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 811              		.loc 1 173 24 is_stmt 0 view .LVU249
 812 0026 4360     		str	r3, [r0, #4]
 174:Core/Src/tim.c ****   htim3.Init.Period = 65535;
 813              		.loc 1 174 3 is_stmt 1 view .LVU250
 174:Core/Src/tim.c ****   htim3.Init.Period = 65535;
 814              		.loc 1 174 26 is_stmt 0 view .LVU251
 815 0028 8360     		str	r3, [r0, #8]
 175:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 816              		.loc 1 175 3 is_stmt 1 view .LVU252
 175:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 817              		.loc 1 175 21 is_stmt 0 view .LVU253
 818 002a 4FF6FF72 		movw	r2, #65535
 819 002e C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccnZXw1L.s 			page 25


 176:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 820              		.loc 1 176 3 is_stmt 1 view .LVU254
 176:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 821              		.loc 1 176 28 is_stmt 0 view .LVU255
 822 0030 0361     		str	r3, [r0, #16]
 177:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 823              		.loc 1 177 3 is_stmt 1 view .LVU256
 177:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 824              		.loc 1 177 32 is_stmt 0 view .LVU257
 825 0032 8361     		str	r3, [r0, #24]
 178:Core/Src/tim.c ****   {
 826              		.loc 1 178 3 is_stmt 1 view .LVU258
 178:Core/Src/tim.c ****   {
 827              		.loc 1 178 7 is_stmt 0 view .LVU259
 828 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 829              	.LVL41:
 178:Core/Src/tim.c ****   {
 830              		.loc 1 178 6 discriminator 1 view .LVU260
 831 0038 0028     		cmp	r0, #0
 832 003a 39D1     		bne	.L68
 833              	.L59:
 182:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 834              		.loc 1 182 3 is_stmt 1 view .LVU261
 182:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 835              		.loc 1 182 34 is_stmt 0 view .LVU262
 836 003c 4FF48053 		mov	r3, #4096
 837 0040 0A93     		str	r3, [sp, #40]
 183:Core/Src/tim.c ****   {
 838              		.loc 1 183 3 is_stmt 1 view .LVU263
 183:Core/Src/tim.c ****   {
 839              		.loc 1 183 7 is_stmt 0 view .LVU264
 840 0042 0AA9     		add	r1, sp, #40
 841 0044 2648     		ldr	r0, .L76
 842 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 843              	.LVL42:
 183:Core/Src/tim.c ****   {
 844              		.loc 1 183 6 discriminator 1 view .LVU265
 845 004a 0028     		cmp	r0, #0
 846 004c 33D1     		bne	.L69
 847              	.L60:
 187:Core/Src/tim.c ****   {
 848              		.loc 1 187 3 is_stmt 1 view .LVU266
 187:Core/Src/tim.c ****   {
 849              		.loc 1 187 7 is_stmt 0 view .LVU267
 850 004e 2448     		ldr	r0, .L76
 851 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 852              	.LVL43:
 187:Core/Src/tim.c ****   {
 853              		.loc 1 187 6 discriminator 1 view .LVU268
 854 0054 0028     		cmp	r0, #0
 855 0056 31D1     		bne	.L70
 856              	.L61:
 191:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 857              		.loc 1 191 3 is_stmt 1 view .LVU269
 191:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 858              		.loc 1 191 37 is_stmt 0 view .LVU270
 859 0058 0023     		movs	r3, #0
ARM GAS  /tmp/ccnZXw1L.s 			page 26


 860 005a 0893     		str	r3, [sp, #32]
 192:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 861              		.loc 1 192 3 is_stmt 1 view .LVU271
 192:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 862              		.loc 1 192 33 is_stmt 0 view .LVU272
 863 005c 0993     		str	r3, [sp, #36]
 193:Core/Src/tim.c ****   {
 864              		.loc 1 193 3 is_stmt 1 view .LVU273
 193:Core/Src/tim.c ****   {
 865              		.loc 1 193 7 is_stmt 0 view .LVU274
 866 005e 08A9     		add	r1, sp, #32
 867 0060 1F48     		ldr	r0, .L76
 868 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 869              	.LVL44:
 193:Core/Src/tim.c ****   {
 870              		.loc 1 193 6 discriminator 1 view .LVU275
 871 0066 60BB     		cbnz	r0, .L71
 872              	.L62:
 197:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 873              		.loc 1 197 3 is_stmt 1 view .LVU276
 197:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 874              		.loc 1 197 20 is_stmt 0 view .LVU277
 875 0068 6023     		movs	r3, #96
 876 006a 0193     		str	r3, [sp, #4]
 198:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 877              		.loc 1 198 3 is_stmt 1 view .LVU278
 198:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 878              		.loc 1 198 19 is_stmt 0 view .LVU279
 879 006c 0022     		movs	r2, #0
 880 006e 0292     		str	r2, [sp, #8]
 199:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 881              		.loc 1 199 3 is_stmt 1 view .LVU280
 199:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 882              		.loc 1 199 24 is_stmt 0 view .LVU281
 883 0070 0392     		str	r2, [sp, #12]
 200:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 884              		.loc 1 200 3 is_stmt 1 view .LVU282
 200:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 885              		.loc 1 200 24 is_stmt 0 view .LVU283
 886 0072 0592     		str	r2, [sp, #20]
 201:Core/Src/tim.c ****   {
 887              		.loc 1 201 3 is_stmt 1 view .LVU284
 201:Core/Src/tim.c ****   {
 888              		.loc 1 201 7 is_stmt 0 view .LVU285
 889 0074 01A9     		add	r1, sp, #4
 890 0076 1A48     		ldr	r0, .L76
 891 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 892              	.LVL45:
 201:Core/Src/tim.c ****   {
 893              		.loc 1 201 6 discriminator 1 view .LVU286
 894 007c 20BB     		cbnz	r0, .L72
 895              	.L63:
 205:Core/Src/tim.c ****   {
 896              		.loc 1 205 3 is_stmt 1 view .LVU287
 205:Core/Src/tim.c ****   {
 897              		.loc 1 205 7 is_stmt 0 view .LVU288
 898 007e 0422     		movs	r2, #4
ARM GAS  /tmp/ccnZXw1L.s 			page 27


 899 0080 0DEB0201 		add	r1, sp, r2
 900 0084 1648     		ldr	r0, .L76
 901 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 902              	.LVL46:
 205:Core/Src/tim.c ****   {
 903              		.loc 1 205 6 discriminator 1 view .LVU289
 904 008a 00BB     		cbnz	r0, .L73
 905              	.L64:
 209:Core/Src/tim.c ****   {
 906              		.loc 1 209 3 is_stmt 1 view .LVU290
 209:Core/Src/tim.c ****   {
 907              		.loc 1 209 7 is_stmt 0 view .LVU291
 908 008c 0822     		movs	r2, #8
 909 008e 01A9     		add	r1, sp, #4
 910 0090 1348     		ldr	r0, .L76
 911 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 912              	.LVL47:
 209:Core/Src/tim.c ****   {
 913              		.loc 1 209 6 discriminator 1 view .LVU292
 914 0096 E8B9     		cbnz	r0, .L74
 915              	.L65:
 213:Core/Src/tim.c ****   {
 916              		.loc 1 213 3 is_stmt 1 view .LVU293
 213:Core/Src/tim.c ****   {
 917              		.loc 1 213 7 is_stmt 0 view .LVU294
 918 0098 0C22     		movs	r2, #12
 919 009a 01A9     		add	r1, sp, #4
 920 009c 1048     		ldr	r0, .L76
 921 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 922              	.LVL48:
 213:Core/Src/tim.c ****   {
 923              		.loc 1 213 6 discriminator 1 view .LVU295
 924 00a2 D0B9     		cbnz	r0, .L75
 925              	.L66:
 220:Core/Src/tim.c **** 
 926              		.loc 1 220 3 is_stmt 1 view .LVU296
 927 00a4 0E48     		ldr	r0, .L76
 928 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 929              	.LVL49:
 222:Core/Src/tim.c **** 
 930              		.loc 1 222 1 is_stmt 0 view .LVU297
 931 00aa 0FB0     		add	sp, sp, #60
 932              		.cfi_remember_state
 933              		.cfi_def_cfa_offset 4
 934              		@ sp needed
 935 00ac 5DF804FB 		ldr	pc, [sp], #4
 936              	.L68:
 937              		.cfi_restore_state
 180:Core/Src/tim.c ****   }
 938              		.loc 1 180 5 is_stmt 1 view .LVU298
 939 00b0 FFF7FEFF 		bl	Error_Handler
 940              	.LVL50:
 941 00b4 C2E7     		b	.L59
 942              	.L69:
 185:Core/Src/tim.c ****   }
 943              		.loc 1 185 5 view .LVU299
 944 00b6 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccnZXw1L.s 			page 28


 945              	.LVL51:
 946 00ba C8E7     		b	.L60
 947              	.L70:
 189:Core/Src/tim.c ****   }
 948              		.loc 1 189 5 view .LVU300
 949 00bc FFF7FEFF 		bl	Error_Handler
 950              	.LVL52:
 951 00c0 CAE7     		b	.L61
 952              	.L71:
 195:Core/Src/tim.c ****   }
 953              		.loc 1 195 5 view .LVU301
 954 00c2 FFF7FEFF 		bl	Error_Handler
 955              	.LVL53:
 956 00c6 CFE7     		b	.L62
 957              	.L72:
 203:Core/Src/tim.c ****   }
 958              		.loc 1 203 5 view .LVU302
 959 00c8 FFF7FEFF 		bl	Error_Handler
 960              	.LVL54:
 961 00cc D7E7     		b	.L63
 962              	.L73:
 207:Core/Src/tim.c ****   }
 963              		.loc 1 207 5 view .LVU303
 964 00ce FFF7FEFF 		bl	Error_Handler
 965              	.LVL55:
 966 00d2 DBE7     		b	.L64
 967              	.L74:
 211:Core/Src/tim.c ****   }
 968              		.loc 1 211 5 view .LVU304
 969 00d4 FFF7FEFF 		bl	Error_Handler
 970              	.LVL56:
 971 00d8 DEE7     		b	.L65
 972              	.L75:
 215:Core/Src/tim.c ****   }
 973              		.loc 1 215 5 view .LVU305
 974 00da FFF7FEFF 		bl	Error_Handler
 975              	.LVL57:
 976 00de E1E7     		b	.L66
 977              	.L77:
 978              		.align	2
 979              	.L76:
 980 00e0 00000000 		.word	htim3
 981 00e4 00040040 		.word	1073742848
 982              		.cfi_endproc
 983              	.LFE67:
 985              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 986              		.align	1
 987              		.global	HAL_TIM_Base_MspDeInit
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 992              	HAL_TIM_Base_MspDeInit:
 993              	.LVL58:
 994              	.LFB71:
 340:Core/Src/tim.c **** 
 341:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 342:Core/Src/tim.c **** {
ARM GAS  /tmp/ccnZXw1L.s 			page 29


 995              		.loc 1 342 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 343:Core/Src/tim.c **** 
 344:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 1000              		.loc 1 344 3 view .LVU307
 1001              		.loc 1 344 20 is_stmt 0 view .LVU308
 1002 0000 0368     		ldr	r3, [r0]
 1003              		.loc 1 344 5 view .LVU309
 1004 0002 0A4A     		ldr	r2, .L83
 1005 0004 9342     		cmp	r3, r2
 1006 0006 03D0     		beq	.L81
 345:Core/Src/tim.c ****   {
 346:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 347:Core/Src/tim.c **** 
 348:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 349:Core/Src/tim.c ****     /* Peripheral clock disable */
 350:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 351:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 352:Core/Src/tim.c **** 
 353:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 354:Core/Src/tim.c ****   }
 355:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM3)
 1007              		.loc 1 355 8 is_stmt 1 view .LVU310
 1008              		.loc 1 355 10 is_stmt 0 view .LVU311
 1009 0008 094A     		ldr	r2, .L83+4
 1010 000a 9342     		cmp	r3, r2
 1011 000c 07D0     		beq	.L82
 1012              	.L78:
 356:Core/Src/tim.c ****   {
 357:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 358:Core/Src/tim.c **** 
 359:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 360:Core/Src/tim.c ****     /* Peripheral clock disable */
 361:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 362:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 363:Core/Src/tim.c **** 
 364:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 365:Core/Src/tim.c ****   }
 366:Core/Src/tim.c **** }
 1013              		.loc 1 366 1 view .LVU312
 1014 000e 7047     		bx	lr
 1015              	.L81:
 350:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1016              		.loc 1 350 5 is_stmt 1 view .LVU313
 1017 0010 02F56442 		add	r2, r2, #58368
 1018 0014 9369     		ldr	r3, [r2, #24]
 1019 0016 23F40063 		bic	r3, r3, #2048
 1020 001a 9361     		str	r3, [r2, #24]
 1021 001c 7047     		bx	lr
 1022              	.L82:
 361:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 1023              		.loc 1 361 5 view .LVU314
 1024 001e 02F50332 		add	r2, r2, #134144
 1025 0022 D369     		ldr	r3, [r2, #28]
ARM GAS  /tmp/ccnZXw1L.s 			page 30


 1026 0024 23F00203 		bic	r3, r3, #2
 1027 0028 D361     		str	r3, [r2, #28]
 1028              		.loc 1 366 1 is_stmt 0 view .LVU315
 1029 002a F0E7     		b	.L78
 1030              	.L84:
 1031              		.align	2
 1032              	.L83:
 1033 002c 002C0140 		.word	1073818624
 1034 0030 00040040 		.word	1073742848
 1035              		.cfi_endproc
 1036              	.LFE71:
 1038              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 1039              		.align	1
 1040              		.global	HAL_TIM_PWM_MspDeInit
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1045              	HAL_TIM_PWM_MspDeInit:
 1046              	.LVL59:
 1047              	.LFB72:
 367:Core/Src/tim.c **** 
 368:Core/Src/tim.c **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 369:Core/Src/tim.c **** {
 1048              		.loc 1 369 1 is_stmt 1 view -0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              		@ link register save eliminated.
 370:Core/Src/tim.c **** 
 371:Core/Src/tim.c ****   if(tim_pwmHandle->Instance==TIM2)
 1053              		.loc 1 371 3 view .LVU317
 1054              		.loc 1 371 19 is_stmt 0 view .LVU318
 1055 0000 0368     		ldr	r3, [r0]
 1056              		.loc 1 371 5 view .LVU319
 1057 0002 B3F1804F 		cmp	r3, #1073741824
 1058 0006 00D0     		beq	.L87
 1059              	.L85:
 372:Core/Src/tim.c ****   {
 373:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 374:Core/Src/tim.c **** 
 375:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 376:Core/Src/tim.c ****     /* Peripheral clock disable */
 377:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 378:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 379:Core/Src/tim.c **** 
 380:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 381:Core/Src/tim.c ****   }
 382:Core/Src/tim.c **** }
 1060              		.loc 1 382 1 view .LVU320
 1061 0008 7047     		bx	lr
 1062              	.L87:
 377:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1063              		.loc 1 377 5 is_stmt 1 view .LVU321
 1064 000a 034A     		ldr	r2, .L88
 1065 000c D369     		ldr	r3, [r2, #28]
 1066 000e 23F00103 		bic	r3, r3, #1
 1067 0012 D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccnZXw1L.s 			page 31


 1068              		.loc 1 382 1 is_stmt 0 view .LVU322
 1069 0014 F8E7     		b	.L85
 1070              	.L89:
 1071 0016 00BF     		.align	2
 1072              	.L88:
 1073 0018 00100240 		.word	1073876992
 1074              		.cfi_endproc
 1075              	.LFE72:
 1077              		.global	htim3
 1078              		.section	.bss.htim3,"aw",%nobits
 1079              		.align	2
 1082              	htim3:
 1083 0000 00000000 		.space	72
 1083      00000000 
 1083      00000000 
 1083      00000000 
 1083      00000000 
 1084              		.global	htim2
 1085              		.section	.bss.htim2,"aw",%nobits
 1086              		.align	2
 1089              	htim2:
 1090 0000 00000000 		.space	72
 1090      00000000 
 1090      00000000 
 1090      00000000 
 1090      00000000 
 1091              		.global	htim1
 1092              		.section	.bss.htim1,"aw",%nobits
 1093              		.align	2
 1096              	htim1:
 1097 0000 00000000 		.space	72
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1098              		.text
 1099              	.Letext0:
 1100              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1101              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1102              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1103              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1104              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1105              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1106              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1107              		.file 9 "Core/Inc/tim.h"
 1108              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1109              		.file 11 "Core/Inc/main.h"
 1110              		.file 12 "<built-in>"
ARM GAS  /tmp/ccnZXw1L.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccnZXw1L.s:19     .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccnZXw1L.s:25     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccnZXw1L.s:96     .text.HAL_TIM_Base_MspInit:00000040 $d
     /tmp/ccnZXw1L.s:103    .text.HAL_TIM_PWM_MspInit:00000000 $t
     /tmp/ccnZXw1L.s:109    .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
     /tmp/ccnZXw1L.s:153    .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/ccnZXw1L.s:159    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/ccnZXw1L.s:352    .text.HAL_TIM_MspPostInit:000000c8 $d
     /tmp/ccnZXw1L.s:361    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccnZXw1L.s:367    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccnZXw1L.s:585    .text.MX_TIM1_Init:000000dc $d
     /tmp/ccnZXw1L.s:1096   .bss.htim1:00000000 htim1
     /tmp/ccnZXw1L.s:591    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccnZXw1L.s:597    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccnZXw1L.s:763    .text.MX_TIM2_Init:000000b0 $d
     /tmp/ccnZXw1L.s:1089   .bss.htim2:00000000 htim2
     /tmp/ccnZXw1L.s:768    .text.MX_TIM3_Init:00000000 $t
     /tmp/ccnZXw1L.s:774    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccnZXw1L.s:980    .text.MX_TIM3_Init:000000e0 $d
     /tmp/ccnZXw1L.s:1082   .bss.htim3:00000000 htim3
     /tmp/ccnZXw1L.s:986    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccnZXw1L.s:992    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccnZXw1L.s:1033   .text.HAL_TIM_Base_MspDeInit:0000002c $d
     /tmp/ccnZXw1L.s:1039   .text.HAL_TIM_PWM_MspDeInit:00000000 $t
     /tmp/ccnZXw1L.s:1045   .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccnZXw1L.s:1073   .text.HAL_TIM_PWM_MspDeInit:00000018 $d
     /tmp/ccnZXw1L.s:1079   .bss.htim3:00000000 $d
     /tmp/ccnZXw1L.s:1086   .bss.htim2:00000000 $d
     /tmp/ccnZXw1L.s:1093   .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
